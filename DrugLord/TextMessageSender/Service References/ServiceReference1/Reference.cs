//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextMessageSender.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Money", Namespace="http://schemas.datacontract.org/2004/07/SoapPimp.Dtos")]
    [System.SerializableAttribute()]
    public partial class Money : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferId {
            get {
                return this.TransferIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferIdField, value) != true)) {
                    this.TransferIdField = value;
                    this.RaisePropertyChanged("TransferId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drugs", Namespace="http://schemas.datacontract.org/2004/07/SoapPimp.Dtos")]
    [System.SerializableAttribute()]
    public partial class Drugs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferId {
            get {
                return this.TransferIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferIdField, value) != true)) {
                    this.TransferIdField = value;
                    this.RaisePropertyChanged("TransferId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDrugLord")]
    public interface IDrugLord {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrugLord/GetMoney", ReplyAction="http://tempuri.org/IDrugLord/GetMoneyResponse")]
        TextMessageSender.ServiceReference1.Money GetMoney(string userToken, string secretCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrugLord/GetMoney", ReplyAction="http://tempuri.org/IDrugLord/GetMoneyResponse")]
        System.Threading.Tasks.Task<TextMessageSender.ServiceReference1.Money> GetMoneyAsync(string userToken, string secretCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrugLord/GetDrugs", ReplyAction="http://tempuri.org/IDrugLord/GetDrugsResponse")]
        TextMessageSender.ServiceReference1.Drugs GetDrugs(string userToken, string secretCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrugLord/GetDrugs", ReplyAction="http://tempuri.org/IDrugLord/GetDrugsResponse")]
        System.Threading.Tasks.Task<TextMessageSender.ServiceReference1.Drugs> GetDrugsAsync(string userToken, string secretCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDrugLordChannel : TextMessageSender.ServiceReference1.IDrugLord, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DrugLordClient : System.ServiceModel.ClientBase<TextMessageSender.ServiceReference1.IDrugLord>, TextMessageSender.ServiceReference1.IDrugLord {
        
        public DrugLordClient() {
        }
        
        public DrugLordClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DrugLordClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrugLordClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrugLordClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TextMessageSender.ServiceReference1.Money GetMoney(string userToken, string secretCode) {
            return base.Channel.GetMoney(userToken, secretCode);
        }
        
        public System.Threading.Tasks.Task<TextMessageSender.ServiceReference1.Money> GetMoneyAsync(string userToken, string secretCode) {
            return base.Channel.GetMoneyAsync(userToken, secretCode);
        }
        
        public TextMessageSender.ServiceReference1.Drugs GetDrugs(string userToken, string secretCode) {
            return base.Channel.GetDrugs(userToken, secretCode);
        }
        
        public System.Threading.Tasks.Task<TextMessageSender.ServiceReference1.Drugs> GetDrugsAsync(string userToken, string secretCode) {
            return base.Channel.GetDrugsAsync(userToken, secretCode);
        }
    }
}
